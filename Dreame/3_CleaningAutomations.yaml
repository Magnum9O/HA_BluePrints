blueprint:
  name: 🤖 Dreame Vacuum - Automazione Pulizie Avanzata
  description: |
    🚀 **SISTEMA INTELLIGENTE DI PULIZIE AUTOMATICHE**
    
    ✨ **CARATTERISTICHE:**
    - 🎯 **Slot Principale**: Pulizie garantite senza logica adattiva
    - 📅 **4 Schedulazioni Aggiuntive**: Con logica adattiva intelligente  
    - 🧠 **Controlli Automatici**: Verifica stato robot e presenza
    - 🔄 **Logica Adattiva**: Evita pulizie ridondanti per le schedulazioni aggiuntive
    - 🏠 **Configurazione Flessibile**: Ogni slot configurabile indipendentemente
    
    📋 **COME FUNZIONA:**
    - Lo **Slot Principale** esegue sempre le pulizie programmate
    - Le **Schedulazioni Aggiuntive** si adattano automaticamente
    - Ogni pulizia può avere modalità, orari e giorni diversi
    - Sistema ottimizzato per evitare sprechi energetici

  domain: automation
  input:
    # ═══════════════════════════════════════════════════════════════
    # 🔧 CONFIGURAZIONE BASE
    # ═══════════════════════════════════════════════════════════════
    vacuum_entity:
      name: 🤖 Robot Aspirapolvere
      description: Seleziona l'entità del robot aspirapolvere da controllare
      selector:
        entity:
          domain: vacuum

    robot_status_sensor:
      name: 📊 Sensore Stato Robot
      description: Sensore che riporta lo stato attuale del robot (idle, cleaning, etc.)
      selector:
        entity:
          domain: sensor

    presence_entity:
      name: 👥 Sensore di Presenza
      description: Entità che indica se qualcuno è in casa (counter, person, etc.)
      selector:
        entity: {}

    presence_value:
      name: 🏠 Valore "Casa Vuota"
      description: Valore che indica casa vuota (es. 0 per counter, 'away' per person)
      default: "0"
      selector:
        text: {}

    flag_cleaned_today:
      name: 🏁 Flag Pulizia Completata
      description: Input boolean che traccia se è già stato pulito oggi (per logica adattiva)
      selector:
        entity:
          domain: input_boolean

    # ═══════════════════════════════════════════════════════════════
    # 🎯 SLOT PRINCIPALE (SEMPRE ATTIVO)
    # ═══════════════════════════════════════════════════════════════
    main_on:
      name: 🎯 Abilita Slot Principale
      description: Attiva il programma principale di pulizia (sempre eseguito, senza logica adattiva)
      selector:
        boolean: {}

    # ────────────────────── MATTINA ──────────────────────
    main_morning_on:
      name: 🌅 Slot Principale - Mattina - Abilita
      description: Attiva la pulizia mattutina del programma principale
      selector:
        boolean: {}

    main_morning_time:
      name: ⏰ Slot Principale - Mattina - Orario
      description: Orario per la pulizia mattutina
      default: "05:00:00"
      selector:
        time: {}

    main_morning_weekdays:
      name: 📅 Slot Principale - Mattina - Giorni
      description: Giorni della settimana per la pulizia mattutina
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    main_morning_preset:
      name: 🎯 Slot Principale - Mattina - Modalità
      description: Modalità di pulizia per il programma mattutino
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    main_morning_rooms:
      name: 🏠 Slot Principale - Mattina - Stanze
      description: "ID stanze separate da virgole (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    # ────────────────────── SERA ──────────────────────
    main_evening_on:
      name: 🌙 Slot Principale - Sera - Abilita
      description: Attiva la pulizia serale del programma principale
      selector:
        boolean: {}

    main_evening_time:
      name: ⏰ Slot Principale - Sera - Orario
      description: Orario per la pulizia serale
      default: "23:00:00"
      selector:
        time: {}

    main_evening_weekdays:
      name: 📅 Slot Principale - Sera - Giorni
      description: Giorni della settimana per la pulizia serale
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    main_evening_conditional:
      name: 🧠 Slot Principale - Sera - Logica Adattiva
      description: Comportamento quando il robot è già stato utilizzato oggi
      default: "always_clean"
      selector:
        select:
          options:
            - value: "always_clean"
              label: "🔄 Pulisci Sempre"
            - value: "adapt_if_cleaned"
              label: "🧠 Adattivo: modalità diversa se già pulito"
            - value: "skip_if_cleaned"  
              label: "⏭️ Salta se già pulito oggi"

    main_evening_preset:
      name: 🎯 Slot Principale - Sera - Modalità Principale
      description: Modalità di pulizia principale per il programma serale
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    main_evening_rooms:
      name: 🏠 Slot Principale - Sera - Stanze Principali
      description: "Stanze per modalità principale (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    main_evening_fallback_preset:
      name: 🔄 Slot Principale - Sera - Modalità Alternativa
      description: "Modalità da usare se già pulito (solo se logica = adapt_if_cleaned)"
      default: "lava"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    main_evening_fallback_rooms:
      name: 🏠 Slot Principale - Sera - Stanze Alternative
      description: "Stanze per modalità alternativa (es: solo bagno = 3)"
      default: ""
      selector:
        text: {}

    # ═══════════════════════════════════════════════════════════════
    # 📋 SCHEDULAZIONE 1 (CON LOGICA ADATTIVA)
    # ═══════════════════════════════════════════════════════════════
    schedule1_on:
      name: 📋 Abilita Prima Schedulazione
      description: Attiva la prima schedulazione aggiuntiva con logica adattiva (salta se già pulito di recente)
      selector:
        boolean: {}

    # ────────────────────── MATTINA ──────────────────────
    schedule1_morning_on:
      name: 🌅 Prima Schedulazione - Mattina - Abilita
      description: Attiva la pulizia mattutina della prima schedulazione con logica adattiva
      selector:
        boolean: {}

    schedule1_morning_time:
      name: ⏰ Prima Schedulazione - Mattina - Orario
      description: Orario per la pulizia mattutina della prima schedulazione
      default: "05:00:00"
      selector:
        time: {}

    schedule1_morning_weekdays:
      name: 📅 Prima Schedulazione - Mattina - Giorni
      description: Giorni della settimana per la pulizia mattutina della prima schedulazione
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    schedule1_morning_preset:
      name: 🎯 Prima Schedulazione - Mattina - Modalità
      description: Modalità di pulizia per il programma mattutino della prima schedulazione
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule1_morning_rooms:
      name: 🏠 Prima Schedulazione - Mattina - Stanze
      description: "ID stanze per mattina (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    # ────────────────────── SERA ──────────────────────
    schedule1_evening_on:
      name: 🌙 Prima Schedulazione - Sera - Abilita
      description: Attiva la pulizia serale della prima schedulazione con logica adattiva
      selector:
        boolean: {}

    schedule1_evening_time:
      name: ⏰ Prima Schedulazione - Sera - Orario
      description: Orario per la pulizia serale della prima schedulazione
      default: "23:00:00"
      selector:
        time: {}

    schedule1_evening_weekdays:
      name: 📅 Prima Schedulazione - Sera - Giorni
      description: Giorni della settimana per la pulizia serale della prima schedulazione
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    schedule1_evening_conditional:
      name: 🧠 Prima Schedulazione - Sera - Logica Adattiva
      description: Comportamento quando il robot è già stato utilizzato oggi
      default: "always_clean"
      selector:
        select:
          options:
            - value: "always_clean"
              label: "🔄 Pulisci Sempre"
            - value: "adapt_if_cleaned"
              label: "🧠 Adattivo: modalità diversa se già pulito"
            - value: "skip_if_cleaned"
              label: "⏭️ Salta se già pulito oggi"

    schedule1_evening_preset:
      name: 🎯 Prima Schedulazione - Sera - Modalità Principale
      description: Modalità di pulizia principale per il programma serale della prima schedulazione
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule1_evening_rooms:
      name: 🏠 Prima Schedulazione - Sera - Stanze Principali
      description: "Stanze per modalità principale (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    schedule1_evening_fallback_preset:
      name: 🔄 Prima Schedulazione - Sera - Modalità Alternativa
      description: "Modalità da usare se già pulito (solo se logica = adapt_if_cleaned)"
      default: "lava"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule1_evening_fallback_rooms:
      name: 🏠 Prima Schedulazione - Sera - Stanze Alternative
      description: "Stanze per modalità alternativa (es: solo bagno = 3)"
      default: ""
      selector:
        text: {}

    # ═══════════════════════════════════════════════════════════════
    # 📋 SCHEDULAZIONE 2 (CON LOGICA ADATTIVA)
    # ═══════════════════════════════════════════════════════════════
    schedule2_on:
      name: 📋 Abilita Seconda Schedulazione
      description: Attiva la seconda schedulazione aggiuntiva con logica adattiva (salta se già pulito di recente)
      selector:
        boolean: {}

    # ────────────────────── MATTINA ──────────────────────
    schedule2_morning_on:
      name: 🌅 Seconda Schedulazione - Mattina - Abilita
      description: Attiva la pulizia mattutina della seconda schedulazione con logica adattiva
      selector:
        boolean: {}

    schedule2_morning_time:
      name: ⏰ Seconda Schedulazione - Mattina - Orario
      description: Orario per la pulizia mattutina della seconda schedulazione
      default: "05:00:00"
      selector:
        time: {}

    schedule2_morning_weekdays:
      name: 📅 Seconda Schedulazione - Mattina - Giorni
      description: Giorni della settimana per la pulizia mattutina della seconda schedulazione
      default: ["domenica"]
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    schedule2_morning_preset:
      name: 🎯 Seconda Schedulazione - Mattina - Modalità
      description: Modalità di pulizia per il programma mattutino della seconda schedulazione
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule2_morning_rooms:
      name: 🏠 Seconda Schedulazione - Mattina - Stanze
      description: "ID stanze per mattina (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    # ────────────────────── SERA ──────────────────────
    schedule2_evening_on:
      name: 🌙 Seconda Schedulazione - Sera - Abilita
      description: Attiva la pulizia serale della seconda schedulazione con logica adattiva
      selector:
        boolean: {}

    schedule2_evening_time:
      name: ⏰ Seconda Schedulazione - Sera - Orario
      description: Orario per la pulizia serale della seconda schedulazione
      default: "23:00:00"
      selector:
        time: {}

    schedule2_evening_weekdays:
      name: 📅 Seconda Schedulazione - Sera - Giorni
      description: Giorni della settimana per la pulizia serale della seconda schedulazione
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    schedule2_evening_conditional:
      name: 🧠 Seconda Schedulazione - Sera - Logica Adattiva
      description: Comportamento quando il robot è già stato utilizzato oggi
      default: "always_clean"
      selector:
        select:
          options:
            - value: "always_clean"
              label: "🔄 Pulisci Sempre"
            - value: "adapt_if_cleaned"
              label: "🧠 Adattivo: modalità diversa se già pulito"
            - value: "skip_if_cleaned"
              label: "⏭️ Salta se già pulito oggi"

    schedule2_evening_preset:
      name: 🎯 Seconda Schedulazione - Sera - Modalità Principale
      description: Modalità di pulizia principale per il programma serale della seconda schedulazione
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule2_evening_rooms:
      name: 🏠 Seconda Schedulazione - Sera - Stanze Principali
      description: "Stanze per modalità principale (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    schedule2_evening_fallback_preset:
      name: 🔄 Seconda Schedulazione - Sera - Modalità Alternativa
      description: "Modalità da usare se già pulito (solo se logica = adapt_if_cleaned)"
      default: "lava"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule2_evening_fallback_rooms:
      name: 🏠 Seconda Schedulazione - Sera - Stanze Alternative
      description: "Stanze per modalità alternativa (es: solo bagno = 3)"
      default: ""
      selector:
        text: {}

    # ═══════════════════════════════════════════════════════════════
    # 📋 SCHEDULAZIONE 3 (CON LOGICA ADATTIVA)
    # ═══════════════════════════════════════════════════════════════
    schedule3_on:
      name: 📋 Abilita Terza Schedulazione
      description: Attiva la terza schedulazione aggiuntiva con logica adattiva (salta se già pulito di recente)
      selector:
        boolean: {}

    # ────────────────────── MATTINA ──────────────────────
    schedule3_morning_on:
      name: 🌅 Terza Schedulazione - Mattina - Abilita
      description: Attiva la pulizia mattutina della terza schedulazione con logica adattiva
      selector:
        boolean: {}

    schedule3_morning_time:
      name: ⏰ Terza Schedulazione - Mattina - Orario
      description: Orario per la pulizia mattutina della terza schedulazione
      default: "05:00:00"
      selector:
        time: {}

    schedule3_morning_weekdays:
      name: 📅 Terza Schedulazione - Mattina - Giorni
      description: Giorni della settimana per la pulizia mattutina della terza schedulazione
      default: ["sabato"]
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    schedule3_morning_preset:
      name: 🎯 Terza Schedulazione - Mattina - Modalità
      description: Modalità di pulizia per il programma mattutino della terza schedulazione
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule3_morning_rooms:
      name: 🏠 Terza Schedulazione - Mattina - Stanze
      description: "ID stanze per mattina (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    # ────────────────────── SERA ──────────────────────
    schedule3_evening_on:
      name: 🌙 Terza Schedulazione - Sera - Abilita
      description: Attiva la pulizia serale della terza schedulazione con logica adattiva
      selector:
        boolean: {}

    schedule3_evening_time:
      name: ⏰ Terza Schedulazione - Sera - Orario
      description: Orario per la pulizia serale della terza schedulazione
      default: "23:00:00"
      selector:
        time: {}

    schedule3_evening_weekdays:
      name: 📅 Terza Schedulazione - Sera - Giorni
      description: Giorni della settimana per la pulizia serale della terza schedulazione
      default: ["sabato"]
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    schedule3_evening_conditional:
      name: 🧠 Terza Schedulazione - Sera - Logica Adattiva
      description: Comportamento quando il robot è già stato utilizzato oggi
      default: "always_clean"
      selector:
        select:
          options:
            - value: "always_clean"
              label: "🔄 Pulisci Sempre"
            - value: "adapt_if_cleaned"
              label: "🧠 Adattivo: modalità diversa se già pulito"
            - value: "skip_if_cleaned"
              label: "⏭️ Salta se già pulito oggi"

    schedule3_evening_preset:
      name: 🎯 Terza Schedulazione - Sera - Modalità Principale
      description: Modalità di pulizia principale per il programma serale della terza schedulazione
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule3_evening_rooms:
      name: 🏠 Terza Schedulazione - Sera - Stanze Principali
      description: "Stanze per modalità principale (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    schedule3_evening_fallback_preset:
      name: 🔄 Terza Schedulazione - Sera - Modalità Alternativa
      description: "Modalità da usare se già pulito (solo se logica = adapt_if_cleaned)"
      default: "lava"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule3_evening_fallback_rooms:
      name: 🏠 Terza Schedulazione - Sera - Stanze Alternative
      description: "Stanze per modalità alternativa (es: solo bagno = 3)"
      default: ""
      selector:
        text: {}

    # ═══════════════════════════════════════════════════════════════
    # 📋 SCHEDULAZIONE 4 (CON LOGICA ADATTIVA)
    # ═══════════════════════════════════════════════════════════════
    schedule4_on:
      name: 📋 Abilita Quarta Schedulazione
      description: Attiva la quarta schedulazione aggiuntiva con logica adattiva (salta se già pulito di recente)
      selector:
        boolean: {}

    # ────────────────────── MATTINA ──────────────────────
    schedule4_morning_on:
      name: 🌅 Quarta Schedulazione - Mattina - Abilita
      description: Attiva la pulizia mattutina della quarta schedulazione con logica adattiva
      selector:
        boolean: {}

    schedule4_morning_time:
      name: ⏰ Quarta Schedulazione - Mattina - Orario
      description: Orario per la pulizia mattutina della quarta schedulazione
      default: "05:00:00"
      selector:
        time: {}

    schedule4_morning_weekdays:
      name: 📅 Quarta Schedulazione - Mattina - Giorni
      description: Giorni della settimana per la pulizia mattutina della quarta schedulazione
      default: ["domenica"]
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    schedule4_morning_preset:
      name: 🎯 Quarta Schedulazione - Mattina - Modalità
      description: Modalità di pulizia per il programma mattutino della quarta schedulazione
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule4_morning_rooms:
      name: 🏠 Quarta Schedulazione - Mattina - Stanze
      description: "ID stanze per mattina (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    # ────────────────────── SERA ──────────────────────
    schedule4_evening_on:
      name: 🌙 Quarta Schedulazione - Sera - Abilita
      description: Attiva la pulizia serale della quarta schedulazione con logica adattiva
      selector:
        boolean: {}

    schedule4_evening_time:
      name: ⏰ Quarta Schedulazione - Sera - Orario
      description: Orario per la pulizia serale della quarta schedulazione
      default: "23:00:00"
      selector:
        time: {}

    schedule4_evening_weekdays:
      name: 📅 Quarta Schedulazione - Sera - Giorni
      description: Giorni della settimana per la pulizia serale della quarta schedulazione
      default: ["domenica"]
      selector:
        select:
          multiple: true
          mode: dropdown
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica

    schedule4_evening_conditional:
      name: 🧠 Quarta Schedulazione - Sera - Logica Adattiva
      description: Comportamento quando il robot è già stato utilizzato oggi
      default: "always_clean"
      selector:
        select:
          options:
            - value: "always_clean"
              label: "🔄 Pulisci Sempre"
            - value: "adapt_if_cleaned"
              label: "🧠 Adattivo: modalità diversa se già pulito"
            - value: "skip_if_cleaned"
              label: "⏭️ Salta se già pulito oggi"

    schedule4_evening_preset:
      name: 🎯 Quarta Schedulazione - Sera - Modalità Principale
      description: Modalità di pulizia principale per il programma serale della quarta schedulazione
      default: "aspira"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule4_evening_rooms:
      name: 🏠 Quarta Schedulazione - Sera - Stanze Principali
      description: "Stanze per modalità principale (es: 1,2,3) o vuoto per tutta casa"
      default: ""
      selector:
        text: {}

    schedule4_evening_fallback_preset:
      name: 🔄 Quarta Schedulazione - Sera - Modalità Alternativa
      description: "Modalità da usare se già pulito (solo se logica = adapt_if_cleaned)"
      default: "lava"
      selector:
        select:
          options:
            - aspira
            - lava
            - aspira_lava
            - cleangenius_deep
            - spot_cleaning
            - custom

    schedule4_evening_fallback_rooms:
      name: 🏠 Quarta Schedulazione - Sera - Stanze Alternative
      description: "Stanze per modalità alternativa (es: solo bagno = 3)"
      default: ""
      selector:
        text: {}

    # ═══════════════════════════════════════════════════════════════
    # 🐛 DEBUG
    # ═══════════════════════════════════════════════════════════════
    debug_mode:
      name: 🐛 Modalità Debug
      description: Abilita notifiche dettagliate per troubleshooting e monitoraggio
      selector:
        boolean: {}

# ═══════════════════════════════════════════════════════════════
# 🔥 VARIABILI GLOBALI
# ═══════════════════════════════════════════════════════════════
variables:
  robot_status: !input robot_status_sensor
  vacuum_ent: !input vacuum_entity
  presence_ent: !input presence_entity
  pres_val: !input presence_value
  flag_ent: !input flag_cleaned_today
  debug_enabled: !input debug_mode

# ═══════════════════════════════════════════════════════════════
# ⚡ TRIGGER SYSTEM
# ═══════════════════════════════════════════════════════════════
trigger:
  # SLOT PRINCIPALE
  - platform: time
    at: !input main_morning_time
    id: main_morning
  - platform: time
    at: !input main_evening_time
    id: main_evening
    
  # PRIMA SCHEDULAZIONE
  - platform: time
    at: !input schedule1_morning_time
    id: schedule1_morning
  - platform: time
    at: !input schedule1_evening_time
    id: schedule1_evening
    
  # SECONDA SCHEDULAZIONE
  - platform: time
    at: !input schedule2_morning_time
    id: schedule2_morning
  - platform: time
    at: !input schedule2_evening_time
    id: schedule2_evening
    
  # TERZA SCHEDULAZIONE
  - platform: time
    at: !input schedule3_morning_time
    id: schedule3_morning
  - platform: time
    at: !input schedule3_evening_time
    id: schedule3_evening
    
  # QUARTA SCHEDULAZIONE
  - platform: time
    at: !input schedule4_morning_time
    id: schedule4_morning
  - platform: time
    at: !input schedule4_evening_time
    id: schedule4_evening

# ═══════════════════════════════════════════════════════════════
# 🛡️ CONDIZIONI GLOBALI
# ═══════════════════════════════════════════════════════════════
condition:
  - condition: and
    conditions:
      # CONTROLLO STATO ROBOT (HARDCODATO - CORRETTO!)
      - condition: template
        value_template: >
          {{ states(robot_status) in ['idle', 'sleeping', 'charging', 'docked'] }}
      
      # CONTROLLO PRESENZA
      - condition: template
        value_template: >
          {{ states(presence_ent) == pres_val }}
      
      # CONTROLLO GIORNO APPROPRIATO
      - condition: template
        value_template: >
          {%- set current_day = now().strftime('%A') | lower -%}
          {%- set day_mapping = {
            'monday': 'lunedì', 'tuesday': 'martedì', 'wednesday': 'mercoledì',
            'thursday': 'giovedì', 'friday': 'venerdì', 'saturday': 'sabato', 'sunday': 'domenica'
          } -%}
          {%- set today_ita = day_mapping[current_day] -%}
          
          {%- if trigger.id == 'main_morning' -%}
            {{ main_on and main_morning_on and today_ita in main_morning_weekdays }}
          {%- elif trigger.id == 'main_evening' -%}
            {{ main_on and main_evening_on and today_ita in main_evening_weekdays }}
          {%- elif trigger.id == 'schedule1_morning' -%}
            {{ schedule1_on and schedule1_morning_on and today_ita in schedule1_morning_weekdays }}
          {%- elif trigger.id == 'schedule1_evening' -%}
            {{ schedule1_on and schedule1_evening_on and today_ita in schedule1_evening_weekdays }}
          {%- elif trigger.id == 'schedule2_morning' -%}
            {{ schedule2_on and schedule2_morning_on and today_ita in schedule2_morning_weekdays }}
          {%- elif trigger.id == 'schedule2_evening' -%}
            {{ schedule2_on and schedule2_evening_on and today_ita in schedule2_evening_weekdays }}
          {%- elif trigger.id == 'schedule3_morning' -%}
            {{ schedule3_on and schedule3_morning_on and today_ita in schedule3_morning_weekdays }}
          {%- elif trigger.id == 'schedule3_evening' -%}
            {{ schedule3_on and schedule3_evening_on and today_ita in schedule3_evening_weekdays }}
          {%- elif trigger.id == 'schedule4_morning' -%}
            {{ schedule4_on and schedule4_morning_on and today_ita in schedule4_morning_weekdays }}
          {%- elif trigger.id == 'schedule4_evening' -%}
            {{ schedule4_on and schedule4_evening_on and today_ita in schedule4_evening_weekdays }}
          {%- else -%}
            false
          {%- endif -%}

# ═══════════════════════════════════════════════════════════════
# 🚀 SISTEMA DI ESECUZIONE
# ═══════════════════════════════════════════════════════════════
action:
  - choose:
      # ═══════════════════ SLOT PRINCIPALE MATTINA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'main_morning' }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: persistent_notification.create
                data:
                  title: "🌅 Dreame - Slot Principale Mattina"
                  message: >
                    Avvio pulizia mattutina:
                    - Modalità: {{ main_morning_preset }}
                    - Stanze: {{ main_morning_rooms if main_morning_rooms else 'Tutta casa' }}
                    - Orario: {{ main_morning_time }}
          
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ vacuum_ent }}"
            data:
              segments: >
                {% if main_morning_rooms %}
                  {{ main_morning_rooms.split(',') | map('int') | list }}
                {% else %}
                  []
                {% endif %}
              cleaning_mode: "{{ main_morning_preset }}"

          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_ent }}"

      # ═══════════════════ SLOT PRINCIPALE SERA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'main_evening' }}"
        sequence:
          - variables:
              already_cleaned: "{{ states(flag_ent) == 'on' }}"
              conditional_mode: "{{ main_evening_conditional }}"
              
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: persistent_notification.create
                data:
                  title: "🌙 Dreame - Slot Principale Sera"
                  message: >
                    Controllo pulizia serale:
                    - Già pulito oggi: {{ already_cleaned }}
                    - Logica: {{ conditional_mode }}
                    - Modalità primaria: {{ main_evening_preset }}
                    {% if conditional_mode == 'adapt_if_cleaned' %}
                    - Modalità alternativa: {{ main_evening_fallback_preset }}
                    {% endif %}

          - choose:
              # SALTA SE GIÀ PULITO
              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'skip_if_cleaned' and already_cleaned }}"
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ debug_enabled }}"
                    then:
                      - service: persistent_notification.create
                        data:
                          title: "⏭️ Dreame - Pulizia Saltata"
                          message: "Pulizia serale saltata: già pulito oggi"

              # MODALITÀ ADATTIVA
              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'adapt_if_cleaned' and already_cleaned }}"
                sequence:
                  - service: dreame_vacuum.vacuum_clean_segment
                    target:
                      entity_id: "{{ vacuum_ent }}"
                    data:
                      segments: >
                        {% if main_evening_fallback_rooms %}
                          {{ main_evening_fallback_rooms.split(',') | map('int') | list }}
                        {% else %}
                          []
                        {% endif %}
                      cleaning_mode: "{{ main_evening_fallback_preset }}"

            # DEFAULT: PULIZIA NORMALE
            default:
              - service: dreame_vacuum.vacuum_clean_segment
                target:
                  entity_id: "{{ vacuum_ent }}"
                data:
                  segments: >
                    {% if main_evening_rooms %}
                      {{ main_evening_rooms.split(',') | map('int') | list }}
                    {% else %}
                      []
                    {% endif %}
                  cleaning_mode: "{{ main_evening_preset }}"

              - service: input_boolean.turn_on
                target:
                  entity_id: "{{ flag_ent }}"

      # ═══════════════════ PRIMA SCHEDULAZIONE MATTINA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'schedule1_morning' }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: persistent_notification.create
                data:
                  title: "🌅 Dreame - Prima Schedulazione Mattina"
                  message: >
                    Avvio prima schedulazione mattutina:
                    - Modalità: {{ schedule1_morning_preset }}
                    - Stanze: {{ schedule1_morning_rooms if schedule1_morning_rooms else 'Tutta casa' }}
          
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ vacuum_ent }}"
            data:
              segments: >
                {% if schedule1_morning_rooms %}
                  {{ schedule1_morning_rooms.split(',') | map('int') | list }}
                {% else %}
                  []
                {% endif %}
              cleaning_mode: "{{ schedule1_morning_preset }}"

          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_ent }}"

      # ═══════════════════ PRIMA SCHEDULAZIONE SERA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'schedule1_evening' }}"
        sequence:
          - variables:
              already_cleaned: "{{ states(flag_ent) == 'on' }}"
              conditional_mode: "{{ schedule1_evening_conditional }}"
              
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'skip_if_cleaned' and already_cleaned }}"
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ debug_enabled }}"
                    then:
                      - service: persistent_notification.create
                        data:
                          title: "⏭️ Dreame - Prima Schedulazione Saltata"
                          message: "Prima schedulazione serale saltata: già pulito oggi"

              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'adapt_if_cleaned' and already_cleaned }}"
                sequence:
                  - service: dreame_vacuum.vacuum_clean_segment
                    target:
                      entity_id: "{{ vacuum_ent }}"
                    data:
                      segments: >
                        {% if schedule1_evening_fallback_rooms %}
                          {{ schedule1_evening_fallback_rooms.split(',') | map('int') | list }}
                        {% else %}
                          []
                        {% endif %}
                      cleaning_mode: "{{ schedule1_evening_fallback_preset }}"

            default:
              - service: dreame_vacuum.vacuum_clean_segment
                target:
                  entity_id: "{{ vacuum_ent }}"
                data:
                  segments: >
                    {% if schedule1_evening_rooms %}
                      {{ schedule1_evening_rooms.split(',') | map('int') | list }}
                    {% else %}
                      []
                    {% endif %}
                  cleaning_mode: "{{ schedule1_evening_preset }}"

              - service: input_boolean.turn_on
                target:
                  entity_id: "{{ flag_ent }}"

      # ═══════════════════ SECONDA SCHEDULAZIONE MATTINA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'schedule2_morning' }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: persistent_notification.create
                data:
                  title: "🌅 Dreame - Seconda Schedulazione Mattina"
                  message: >
                    Avvio seconda schedulazione mattutina:
                    - Modalità: {{ schedule2_morning_preset }}
                    - Stanze: {{ schedule2_morning_rooms if schedule2_morning_rooms else 'Tutta casa' }}
          
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ vacuum_ent }}"
            data:
              segments: >
                {% if schedule2_morning_rooms %}
                  {{ schedule2_morning_rooms.split(',') | map('int') | list }}
                {% else %}
                  []
                {% endif %}
              cleaning_mode: "{{ schedule2_morning_preset }}"

          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_ent }}"

      # ═══════════════════ SECONDA SCHEDULAZIONE SERA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'schedule2_evening' }}"
        sequence:
          - variables:
              already_cleaned: "{{ states(flag_ent) == 'on' }}"
              conditional_mode: "{{ schedule2_evening_conditional }}"
              
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'skip_if_cleaned' and already_cleaned }}"
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ debug_enabled }}"
                    then:
                      - service: persistent_notification.create
                        data:
                          title: "⏭️ Dreame - Seconda Schedulazione Saltata"
                          message: "Seconda schedulazione serale saltata: già pulito oggi"

              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'adapt_if_cleaned' and already_cleaned }}"
                sequence:
                  - service: dreame_vacuum.vacuum_clean_segment
                    target:
                      entity_id: "{{ vacuum_ent }}"
                    data:
                      segments: >
                        {% if schedule2_evening_fallback_rooms %}
                          {{ schedule2_evening_fallback_rooms.split(',') | map('int') | list }}
                        {% else %}
                          []
                        {% endif %}
                      cleaning_mode: "{{ schedule2_evening_fallback_preset }}"

            default:
              - service: dreame_vacuum.vacuum_clean_segment
                target:
                  entity_id: "{{ vacuum_ent }}"
                data:
                  segments: >
                    {% if schedule2_evening_rooms %}
                      {{ schedule2_evening_rooms.split(',') | map('int') | list }}
                    {% else %}
                      []
                    {% endif %}
                  cleaning_mode: "{{ schedule2_evening_preset }}"

              - service: input_boolean.turn_on
                target:
                  entity_id: "{{ flag_ent }}"

      # ═══════════════════ TERZA SCHEDULAZIONE MATTINA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'schedule3_morning' }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: persistent_notification.create
                data:
                  title: "🌅 Dreame - Terza Schedulazione Mattina"
                  message: >
                    Avvio terza schedulazione mattutina:
                    - Modalità: {{ schedule3_morning_preset }}
                    - Stanze: {{ schedule3_morning_rooms if schedule3_morning_rooms else 'Tutta casa' }}
          
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ vacuum_ent }}"
            data:
              segments: >
                {% if schedule3_morning_rooms %}
                  {{ schedule3_morning_rooms.split(',') | map('int') | list }}
                {% else %}
                  []
                {% endif %}
              cleaning_mode: "{{ schedule3_morning_preset }}"

          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_ent }}"

      # ═══════════════════ TERZA SCHEDULAZIONE SERA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'schedule3_evening' }}"
        sequence:
          - variables:
              already_cleaned: "{{ states(flag_ent) == 'on' }}"
              conditional_mode: "{{ schedule3_evening_conditional }}"
              
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'skip_if_cleaned' and already_cleaned }}"
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ debug_enabled }}"
                    then:
                      - service: persistent_notification.create
                        data:
                          title: "⏭️ Dreame - Terza Schedulazione Saltata"
                          message: "Terza schedulazione serale saltata: già pulito oggi"

              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'adapt_if_cleaned' and already_cleaned }}"
                sequence:
                  - service: dreame_vacuum.vacuum_clean_segment
                    target:
                      entity_id: "{{ vacuum_ent }}"
                    data:
                      segments: >
                        {% if schedule3_evening_fallback_rooms %}
                          {{ schedule3_evening_fallback_rooms.split(',') | map('int') | list }}
                        {% else %}
                          []
                        {% endif %}
                      cleaning_mode: "{{ schedule3_evening_fallback_preset }}"

            default:
              - service: dreame_vacuum.vacuum_clean_segment
                target:
                  entity_id: "{{ vacuum_ent }}"
                data:
                  segments: >
                    {% if schedule3_evening_rooms %}
                      {{ schedule3_evening_rooms.split(',') | map('int') | list }}
                    {% else %}
                      []
                    {% endif %}
                  cleaning_mode: "{{ schedule3_evening_preset }}"

              - service: input_boolean.turn_on
                target:
                  entity_id: "{{ flag_ent }}"

      # ═══════════════════ QUARTA SCHEDULAZIONE MATTINA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'schedule4_morning' }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: persistent_notification.create
                data:
                  title: "🌅 Dreame - Quarta Schedulazione Mattina"
                  message: >
                    Avvio quarta schedulazione mattutina:
                    - Modalità: {{ schedule4_morning_preset }}
                    - Stanze: {{ schedule4_morning_rooms if schedule4_morning_rooms else 'Tutta casa' }}
          
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ vacuum_ent }}"
            data:
              segments: >
                {% if schedule4_morning_rooms %}
                  {{ schedule4_morning_rooms.split(',') | map('int') | list }}
                {% else %}
                  []
                {% endif %}
              cleaning_mode: "{{ schedule4_morning_preset }}"

          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_ent }}"

      # ═══════════════════ QUARTA SCHEDULAZIONE SERA ═══════════════════
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'schedule4_evening' }}"
        sequence:
          - variables:
              already_cleaned: "{{ states(flag_ent) == 'on' }}"
              conditional_mode: "{{ schedule4_evening_conditional }}"
              
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'skip_if_cleaned' and already_cleaned }}"
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ debug_enabled }}"
                    then:
                      - service: persistent_notification.create
                        data:
                          title: "⏭️ Dreame - Quarta Schedulazione Saltata"
                          message: "Quarta schedulazione serale saltata: già pulito oggi"

              - conditions:
                  - condition: template
                    value_template: "{{ conditional_mode == 'adapt_if_cleaned' and already_cleaned }}"
                sequence:
                  - service: dreame_vacuum.vacuum_clean_segment
                    target:
                      entity_id: "{{ vacuum_ent }}"
                    data:
                      segments: >
                        {% if schedule4_evening_fallback_rooms %}
                          {{ schedule4_evening_fallback_rooms.split(',') | map('int') | list }}
                        {% else %}
                          []
                        {% endif %}
                      cleaning_mode: "{{ schedule4_evening_fallback_preset }}"

            default:
              - service: dreame_vacuum.vacuum_clean_segment
                target:
                  entity_id: "{{ vacuum_ent }}"
                data:
                  segments: >
                    {% if schedule4_evening_rooms %}
                      {{ schedule4_evening_rooms.split(',') | map('int') | list }}
                    {% else %}
                      []
                    {% endif %}
                  cleaning_mode: "{{ schedule4_evening_preset }}"

              - service: input_boolean.turn_on
                target:
                  entity_id: "{{ flag_ent }}"

    # FALLBACK PER ERRORI
    default:
      - if:
          - condition: template
            value_template: "{{ debug_enabled }}"
        then:
          - service: persistent_notification.create
            data:
              title: "❌ Dreame - Errore"
              message: >
                Trigger non riconosciuto: {{ trigger.id }}
                Controlla la configurazione del blueprint.

mode: queued
max: 10
