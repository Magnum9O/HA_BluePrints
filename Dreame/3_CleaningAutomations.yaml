blueprint:
  name: "[DEV] Dreame Vacuum - Automazione Pulizie Avanzata"
  description: |
    🤖 **Automazione avanzata per robot Dreame con logiche intelligenti**
    
    ✨ **NOVITÀ v2.0:**
    - 🔄 **Logica adattiva**: La sera si adatta al mattino
    - 🔗 **Pulizie sequenziali**: Più stanze consecutive con attesa
    - 🤖 **Controllo stato robot**: Verifica stato prima di iniziare
    - 📋 **Pianificazione avanzata**: Template Jinja2 personalizzabili
    - 🔔 **Notifiche intelligenti**: Annunci Alexa opzionali
    - 🐛 **Modalità debug**: Log dettagliati per troubleshooting
    
    📚 **Compatibile con la versione base** - estende le funzionalità esistenti
  
  domain: automation
  input:
    # === ENTITÀ PRINCIPALI ===
    vacuum_entity:
      name: 🤖 Entità Vacuum
      description: Il tuo robot Dreame (es. vacuum.ambrogio)
      selector:
        entity:
          domain: vacuum
          
    robot_status_sensor:
      name: 📊 Sensore Stato Robot (Opzionale)
      description: |
        Seleziona il sensore di stato del robot per verifiche avanzate prima di iniziare.
        
        🔍 **Come trovarlo:**
        - Generalmente si chiama: `sensor.NOME_ROBOT_status` oppure `sensor.NOME_ROBOT_state`
        - Esempio: se il robot è `vacuum.ambrogio`, cerca `sensor.ambrogio_status`
        
        ⚠️ **Lascia vuoto per disabilitare** il controllo stato (pulizia partirà sempre)
      default: ""
      selector:
        entity:
          domain: sensor
          
    valid_robot_states:
      name: ✅ Stati Robot Validi
      description: Stati in cui il robot può iniziare una pulizia
      default: ["idle", "sleeping", "charging", "docked"]
      selector:
        select:
          options:
            - "idle"
            - "sleeping" 
            - "charging"
            - "docked"
            - "paused"
            - "returning"
          multiple: true
          
    # === CONTROLLO PRESENZA ===
    presence_entity:
      name: 🏠 Entità Presenza (Opzionale)
      description: |
        Seleziona un'entità che indica se sei in casa o fuori casa.
        
        💡 **Esempi comuni:**
        - `person.il_tuo_nome` (entità Persona di HA)
        - `binary_sensor.occupancy` (sensore presenza PIR)
        - `input_boolean.away_mode` (interruttore manuale) 
        - `counter.people_home` (contatore persone in casa)
        
        ⚠️ **Lascia vuoto per disabilitare** il controllo presenza (pulizia partirà sempre)
      default: ""
      selector:
        entity: {}
        
    presence_value:
      name: 🚪 Valore "Fuori Casa"
      description: |
        Il valore che l'entità presenza deve avere per indicare "fuori casa".
        
        📝 **Esempi in base al tipo di entità:**
        - Entità `person.*` → `"not_home"` o `"away"`
        - `binary_sensor.*` → `"off"` (quando non rileva presenza)
        - `input_boolean.*` → `"on"` (se acceso = via da casa)
        - `counter.*` → `"0"` (nessuno in casa)
        
        ❓ **Come scoprirlo:** Vai in Strumenti Sviluppatore → Stati, trova la tua entità e guarda il valore quando sei fuori casa
      default: "not_home"
      
    # === FLAG PULIZIA GIORNALIERO ===
    flag_cleaned_today:
      name: 🏃 Flag "Pulito Oggi" 
      description: |
        Input boolean che traccia se è già stata fatta pulizia oggi.
        
        🆕 **Se non ce l'hai:**
        1. Clicca il menu a tendina
        2. Clicca **"+ Crea nuova entità"**
        3. Seleziona **"Input Boolean"**
        4. Nome: "Pulito Oggi" (o simile)
        5. ID: `cleaned_today` (o simile)
        
        ℹ️ **Funzione:** Si accende dopo ogni pulizia, si spegne automaticamente a mezzanotte
      selector:
        entity:
          domain: input_boolean
          
    # === NOTIFICHE E DEBUG ===
    notification_targets:
      name: 🔔 Dispositivi Notifica (Opzionale)
      description: |
        Media player Alexa per ricevere annunci vocali automatici.
        
        📱 **Come configurare:**
        - Per un dispositivo: `media_player.echo_dot_soggiorno`
        - Per più dispositivi: `media_player.echo_dot_soggiorno,media_player.alexina_cucina`
        
        🔍 **Come trovare i nomi:** Vai in Strumenti Sviluppatore → Stati, cerca `media_player.`
        
        ⚠️ **Lascia vuoto per disabilitare** le notifiche vocali
      default: ""
      
    debug_mode:
      name: 🐛 Modalità Debug
      description: |
        Abilita log dettagliati nel registro di Home Assistant per troubleshooting.
        
        📋 **Quando abilitare:**
        - Prima configurazione per verificare che tutto funzioni
        - Quando qualcosa non va come dovrebbe
        - Per vedere nel dettaglio cosa sta succedendo
        
        📝 **Dove vedere i log:** Impostazioni → Sistema → Log
      default: false
      selector:
        boolean: {}
        
    # ========================================
    # === SLOT MATTINA ===
    # ========================================
    morning_on:
      name: 🌅 MATTINA - Abilita
      default: true
      selector:
        boolean: {}
        
    morning_time:
      name: ⏰ MATTINA - Orario
      default: "08:00:00"
      selector:
        time: {}
        
    morning_weekdays:
      name: 📅 MATTINA - Giorni Settimana
      default: ["monday", "tuesday", "wednesday", "thursday", "friday"]
      selector:
        select:
          options: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
          multiple: true
          
    morning_schedule_template:
      name: 📋 MATTINA - Pianificazione Avanzata (Opzionale)
      description: |
        Template Jinja2 personalizzato per controlli avanzati.
        Lascia vuoto per usare solo i giorni della settimana.
        
        📝 **Esempi:**
        - `now().isoweekday() == 1` (solo Lunedì)
        - `now().isoweekday() in [1,3,5]` (Lun/Mer/Ven)
        - `now().day % 2 == 0` (giorni pari del mese)
      default: ""
      
    morning_preset:
      name: 🎯 MATTINA - Modalità Pulizia
      default: "aspira"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    morning_rooms:
      name: 🏠 MATTINA - Stanze
      description: "ID numerici (2,3,4) o nomi stanze separati da virgola. Lascia vuoto per tutta la casa"
      default: ""
      
    # === MATTINA - PULIZIE SEQUENZIALI ===
    morning_sequential:
      name: 🔗 MATTINA - Pulizia Sequenziale
      description: Abilita più pulizie consecutive con attesa tra una e l'altra
      default: false
      selector:
        boolean: {}
        
    morning_step2_preset:
      name: 🎯 MATTINA - Step 2 - Modalità
      default: "cleangenius"
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    morning_step2_rooms:
      name: 🏠 MATTINA - Step 2 - Stanze
      default: ""
      
    morning_step3_preset:
      name: 🎯 MATTINA - Step 3 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    morning_step3_rooms:
      name: 🏠 MATTINA - Step 3 - Stanze
      default: ""
      
    morning_max_wait:
      name: ⏱️ MATTINA - Timeout Attesa (minuti)
      description: Tempo massimo di attesa completamento tra step
      default: 60
      selector:
        number:
          min: 10
          max: 180
          unit_of_measurement: "min"
          
    # ========================================
    # === SLOT SERA ===
    # ========================================
    evening_on:
      name: 🌙 SERA - Abilita
      default: true
      selector:
        boolean: {}
        
    evening_time:
      name: ⏰ SERA - Orario
      default: "18:00:00"
      selector:
        time: {}
        
    evening_weekdays:
      name: 📅 SERA - Giorni Settimana
      default: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
      selector:
        select:
          options: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
          multiple: true
          
    evening_schedule_template:
      name: 📋 SERA - Pianificazione Avanzata (Opzionale)
      default: ""
      
    # === SERA - LOGICA ADATTIVA ===
    evening_conditional:
      name: 🧠 SERA - Logica Adattiva
      description: |
        Come comportarsi in base alla pulizia mattutina:
        - **always** = Esegui sempre (come prima)
        - **skip_if_cleaned** = Salta se già pulito oggi
        - **fallback_if_not_cleaned** = Esegui solo se NON pulito oggi  
        - **adapt_if_cleaned** = Cambia modalità se già pulito oggi
      default: "always"
      selector:
        select:
          options:
            - label: "Esegui sempre"
              value: "always"
            - label: "Salta se già pulito oggi"
              value: "skip_if_cleaned"
            - label: "Esegui solo se NON pulito oggi"
              value: "fallback_if_not_cleaned"
            - label: "Adatta modalità se già pulito"
              value: "adapt_if_cleaned"
              
    evening_preset:
      name: 🎯 SERA - Modalità Pulizia
      default: "cleangenius"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    evening_rooms:
      name: 🏠 SERA - Stanze
      default: ""
      
    # === SERA - MODALITÀ ALTERNATIVA ===
    evening_fallback_preset:
      name: 🔄 SERA - Modalità Alternativa
      description: "Modalità da usare con logica 'adapt_if_cleaned'"
      default: "aspira"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    evening_fallback_rooms:
      name: 🔄 SERA - Stanze Alternative  
      description: "Stanze da usare con logica 'adapt_if_cleaned'"
      default: ""
      
    # === SERA - SEQUENZIALI ===
    evening_sequential:
      name: 🔗 SERA - Pulizia Sequenziale
      default: false
      selector:
        boolean: {}
        
    evening_step2_preset:
      name: 🎯 SERA - Step 2 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    evening_step2_rooms:
      name: 🏠 SERA - Step 2 - Stanze
      default: ""
      
    evening_step3_preset:
      name: 🎯 SERA - Step 3 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    evening_step3_rooms:
      name: 🏠 SERA - Step 3 - Stanze
      default: ""
      
    evening_max_wait:
      name: ⏱️ SERA - Timeout Attesa (minuti)
      default: 60
      selector:
        number:
          min: 10
          max: 180
          unit_of_measurement: "min"
          
    # ========================================
    # === BLOCCO 1 ===
    # ======================================== 
    block1_on:
      name: 🎯 BLOCCO 1 - Abilita
      default: false
      selector:
        boolean: {}
        
    block1_time:
      name: ⏰ BLOCCO 1 - Orario
      default: "12:00:00"
      selector:
        time: {}
        
    block1_weekdays:
      name: 📅 BLOCCO 1 - Giorni Settimana
      default: ["saturday", "sunday"]
      selector:
        select:
          options: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
          multiple: true
          
    block1_schedule_template:
      name: 📋 BLOCCO 1 - Pianificazione Avanzata (Opzionale)
      default: ""
      
    block1_conditional:
      name: 🧠 BLOCCO 1 - Logica Adattiva
      default: "always"
      selector:
        select:
          options:
            - label: "Esegui sempre"
              value: "always"
            - label: "Salta se già pulito oggi"
              value: "skip_if_cleaned"
            - label: "Esegui solo se NON pulito oggi"
              value: "fallback_if_not_cleaned"
            - label: "Adatta modalità se già pulito"
              value: "adapt_if_cleaned"
              
    block1_preset:
      name: 🎯 BLOCCO 1 - Modalità Pulizia
      default: "pulisci"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block1_rooms:
      name: 🏠 BLOCCO 1 - Stanze
      default: ""
      
    block1_fallback_preset:
      name: 🔄 BLOCCO 1 - Modalità Alternativa
      default: "aspira"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block1_fallback_rooms:
      name: 🔄 BLOCCO 1 - Stanze Alternative
      default: ""
      
    block1_sequential:
      name: 🔗 BLOCCO 1 - Pulizia Sequenziale
      default: false
      selector:
        boolean: {}
        
    block1_step2_preset:
      name: 🎯 BLOCCO 1 - Step 2 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block1_step2_rooms:
      name: 🏠 BLOCCO 1 - Step 2 - Stanze
      default: ""
      
    block1_step3_preset:
      name: 🎯 BLOCCO 1 - Step 3 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block1_step3_rooms:
      name: 🏠 BLOCCO 1 - Step 3 - Stanze
      default: ""
      
    block1_max_wait:
      name: ⏱️ BLOCCO 1 - Timeout Attesa (minuti)
      default: 60
      selector:
        number:
          min: 10
          max: 180
          unit_of_measurement: "min"

    # ========================================
    # === BLOCCO 2 === 
    # ========================================
    block2_on:
      name: 🎯 BLOCCO 2 - Abilita
      default: false
      selector:
        boolean: {}
        
    block2_time:
      name: ⏰ BLOCCO 2 - Orario
      default: "14:00:00"
      selector:
        time: {}
        
    block2_weekdays:
      name: 📅 BLOCCO 2 - Giorni Settimana
      default: ["saturday", "sunday"]
      selector:
        select:
          options: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
          multiple: true
          
    block2_schedule_template:
      name: 📋 BLOCCO 2 - Pianificazione Avanzata (Opzionale)
      default: ""
      
    block2_conditional:
      name: 🧠 BLOCCO 2 - Logica Adattiva
      default: "always"
      selector:
        select:
          options:
            - label: "Esegui sempre"
              value: "always"
            - label: "Salta se già pulito oggi"
              value: "skip_if_cleaned"
            - label: "Esegui solo se NON pulito oggi"
              value: "fallback_if_not_cleaned"
            - label: "Adatta modalità se già pulito"
              value: "adapt_if_cleaned"
              
    block2_preset:
      name: 🎯 BLOCCO 2 - Modalità Pulizia
      default: "pulisci"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block2_rooms:
      name: 🏠 BLOCCO 2 - Stanze
      default: ""
      
    block2_fallback_preset:
      name: 🔄 BLOCCO 2 - Modalità Alternativa
      default: "aspira"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block2_fallback_rooms:
      name: 🔄 BLOCCO 2 - Stanze Alternative
      default: ""
      
    block2_sequential:
      name: 🔗 BLOCCO 2 - Pulizia Sequenziale
      default: false
      selector:
        boolean: {}
        
    block2_step2_preset:
      name: 🎯 BLOCCO 2 - Step 2 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block2_step2_rooms:
      name: 🏠 BLOCCO 2 - Step 2 - Stanze
      default: ""
      
    block2_step3_preset:
      name: 🎯 BLOCCO 2 - Step 3 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block2_step3_rooms:
      name: 🏠 BLOCCO 2 - Step 3 - Stanze
      default: ""
      
    block2_max_wait:
      name: ⏱️ BLOCCO 2 - Timeout Attesa (minuti)
      default: 60
      selector:
        number:
          min: 10
          max: 180
          unit_of_measurement: "min"

    # ========================================
    # === BLOCCO 3 === 
    # ========================================
    block3_on:
      name: 🎯 BLOCCO 3 - Abilita
      default: false
      selector:
        boolean: {}
        
    block3_time:
      name: ⏰ BLOCCO 3 - Orario
      default: "16:00:00"
      selector:
        time: {}
        
    block3_weekdays:
      name: 📅 BLOCCO 3 - Giorni Settimana
      default: ["saturday", "sunday"]
      selector:
        select:
          options: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
          multiple: true
          
    block3_schedule_template:
      name: 📋 BLOCCO 3 - Pianificazione Avanzata (Opzionale)
      default: ""
      
    block3_conditional:
      name: 🧠 BLOCCO 3 - Logica Adattiva
      default: "always"
      selector:
        select:
          options:
            - label: "Esegui sempre"
              value: "always"
            - label: "Salta se già pulito oggi"
              value: "skip_if_cleaned"
            - label: "Esegui solo se NON pulito oggi"
              value: "fallback_if_not_cleaned"
            - label: "Adatta modalità se già pulito"
              value: "adapt_if_cleaned"
              
    block3_preset:
      name: 🎯 BLOCCO 3 - Modalità Pulizia
      default: "pulisci"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block3_rooms:
      name: 🏠 BLOCCO 3 - Stanze
      default: ""
      
    block3_fallback_preset:
      name: 🔄 BLOCCO 3 - Modalità Alternativa
      default: "aspira"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block3_fallback_rooms:
      name: 🔄 BLOCCO 3 - Stanze Alternative
      default: ""
      
    block3_sequential:
      name: 🔗 BLOCCO 3 - Pulizia Sequenziale
      default: false
      selector:
        boolean: {}
        
    block3_step2_preset:
      name: 🎯 BLOCCO 3 - Step 2 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block3_step2_rooms:
      name: 🏠 BLOCCO 3 - Step 2 - Stanze
      default: ""
      
    block3_step3_preset:
      name: 🎯 BLOCCO 3 - Step 3 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block3_step3_rooms:
      name: 🏠 BLOCCO 3 - Step 3 - Stanze
      default: ""
      
    block3_max_wait:
      name: ⏱️ BLOCCO 3 - Timeout Attesa (minuti)
      default: 60
      selector:
        number:
          min: 10
          max: 180
          unit_of_measurement: "min"

    # ========================================
    # === BLOCCO 4 === 
    # ========================================
    block4_on:
      name: 🎯 BLOCCO 4 - Abilita
      default: false
      selector:
        boolean: {}
        
    block4_time:
      name: ⏰ BLOCCO 4 - Orario
      default: "20:00:00"
      selector:
        time: {}
        
    block4_weekdays:
      name: 📅 BLOCCO 4 - Giorni Settimana
      default: ["saturday", "sunday"]
      selector:
        select:
          options: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
          multiple: true
          
    block4_schedule_template:
      name: 📋 BLOCCO 4 - Pianificazione Avanzata (Opzionale)
      default: ""
      
    block4_conditional:
      name: 🧠 BLOCCO 4 - Logica Adattiva
      default: "always"
      selector:
        select:
          options:
            - label: "Esegui sempre"
              value: "always"
            - label: "Salta se già pulito oggi"
              value: "skip_if_cleaned"
            - label: "Esegui solo se NON pulito oggi"
              value: "fallback_if_not_cleaned"
            - label: "Adatta modalità se già pulito"
              value: "adapt_if_cleaned"
              
    block4_preset:
      name: 🎯 BLOCCO 4 - Modalità Pulizia
      default: "pulisci"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block4_rooms:
      name: 🏠 BLOCCO 4 - Stanze
      default: ""
      
    block4_fallback_preset:
      name: 🔄 BLOCCO 4 - Modalità Alternativa
      default: "aspira"
      selector:
        select:
          options: ["aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block4_fallback_rooms:
      name: 🔄 BLOCCO 4 - Stanze Alternative
      default: ""
      
    block4_sequential:
      name: 🔗 BLOCCO 4 - Pulizia Sequenziale
      default: false
      selector:
        boolean: {}
        
    block4_step2_preset:
      name: 🎯 BLOCCO 4 - Step 2 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block4_step2_rooms:
      name: 🏠 BLOCCO 4 - Step 2 - Stanze
      default: ""
      
    block4_step3_preset:
      name: 🎯 BLOCCO 4 - Step 3 - Modalità
      default: ""
      selector:
        select:
          options: ["", "aspira", "lava", "pulisci", "cleangenius", "cleangenius_deep"]
          
    block4_step3_rooms:
      name: 🏠 BLOCCO 4 - Step 3 - Stanze
      default: ""
      
    block4_max_wait:
      name: ⏱️ BLOCCO 4 - Timeout Attesa (minuti)
      default: 60
      selector:
        number:
          min: 10
          max: 180
          unit_of_measurement: "min"

# =========================================
# === TRIGGERS E AZIONI ===
# =========================================
trigger:
  - platform: time
    at: !input morning_time
    id: morning
  - platform: time  
    at: !input evening_time
    id: evening
  - platform: time
    at: !input block1_time
    id: block1
  - platform: time
    at: !input block2_time
    id: block2
  - platform: time
    at: !input block3_time
    id: block3
  - platform: time
    at: !input block4_time
    id: block4
  # Reset flag giornaliero
  - platform: time
    at: "23:59:00"
    id: reset_flag

variables:
  # Entità principali
  vacuum_ent: !input vacuum_entity
  robot_status: !input robot_status_sensor
  valid_states: !input valid_robot_states
  presence_ent: !input presence_entity
  pres_val: !input presence_value
  flag_cleaned: !input flag_cleaned_today
  notification_targets: !input notification_targets
  debug_enabled: !input debug_mode

action:
  # === RESET FLAG GIORNALIERO ===
  - if:
      - condition: template
        value_template: "{{ trigger.id == 'reset_flag' }}"
    then:
      - if:
          - condition: template
            value_template: "{{ debug_enabled }}"
        then:
          - service: system_log.write
            data:
              message: "[DREAME BLUEPRINT] 🌙 Reset flag pulizia giornaliero"
              level: info
      - service: input_boolean.turn_off
        target:
          entity_id: "{{ flag_cleaned }}"
      - stop: "Reset flag completato"

  # === LOGICA PRINCIPALE ===
  - choose:
      # ===== MATTINA =====
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'morning' }}"
          - condition: template
            value_template: "{{ morning_on }}"
          - condition: template
            value_template: |
              {% set current_weekday = now().strftime('%A').lower() %}
              {{ current_weekday in morning_weekdays }}
          - condition: template
            value_template: |
              {% if morning_schedule_template != '' %}
                {{ morning_schedule_template | bool }}
              {% else %}
                true
              {% endif %}
          - condition: template
            value_template: |
              {% if robot_status != '' %}
                {{ states(robot_status) in valid_states }}
              {% else %}
                true
              {% endif %}
          - condition: template
            value_template: |
              {% if presence_ent != '' %}
                {{ states(presence_ent) == pres_val }}
              {% else %}
                true
              {% endif %}
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: system_log.write
                data:
                  message: "[DREAME BLUEPRINT] 🌅 Avvio pulizia MATTINA"
                  level: info
          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_cleaned }}"

      # ===== SERA =====  
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'evening' }}"
          - condition: template
            value_template: "{{ evening_on }}"
          - condition: template
            value_template: |
              {% set current_weekday = now().strftime('%A').lower() %}
              {{ current_weekday in evening_weekdays }}
          - condition: template
            value_template: |
              {% if evening_schedule_template != '' %}
                {{ evening_schedule_template | bool }}
              {% else %}
                true
              {% endif %}
          - condition: template
            value_template: |
              {% if robot_status != '' %}
                {{ states(robot_status) in valid_states }}
              {% else %}
                true
              {% endif %}
          - condition: template
            value_template: |
              {% if presence_ent != '' %}
                {{ states(presence_ent) == pres_val }}
              {% else %}
                true
              {% endif %}
        sequence:
          # === LOGICA ADATTIVA ===
          - choose:
              # Skip se già pulito
              - conditions:
                  - condition: template
                    value_template: "{{ evening_conditional == 'skip_if_cleaned' }}"
                  - condition: template
                    value_template: "{{ is_state(flag_cleaned, 'on') }}"
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ debug_enabled }}"
                    then:
                      - service: system_log.write
                        data:
                          message: "[DREAME BLUEPRINT] ⏭️ Pulizia SERA saltata - già pulito oggi"
                          level: info
                  - stop: "Pulizia già effettuata oggi"
              
              # Esegui solo se non pulito
              - conditions:
                  - condition: template
                    value_template: "{{ evening_conditional == 'fallback_if_not_cleaned' }}"
                  - condition: template
                    value_template: "{{ is_state(flag_cleaned, 'off') }}"
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ debug_enabled }}"
                    then:
                      - service: system_log.write
                        data:
                          message: "[DREAME BLUEPRINT] 🌙 Pulizia SERA (Recupero) - non pulito oggi"
                          level: info
                  - service: input_boolean.turn_on
                    target:
                      entity_id: "{{ flag_cleaned }}"
              
              # Adatta modalità se già pulito
              - conditions:
                  - condition: template
                    value_template: "{{ evening_conditional == 'adapt_if_cleaned' }}"
                  - condition: template
                    value_template: "{{ is_state(flag_cleaned, 'on') }}"
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ debug_enabled }}"
                    then:
                      - service: system_log.write
                        data:
                          message: "[DREAME BLUEPRINT] 🌙 Pulizia SERA (Modalità Leggera) - già pulito, uso modalità alternativa"
                          level: info
              
              # Esegui sempre (default)
              - conditions: []
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ debug_enabled }}"
                    then:
                      - service: system_log.write
                        data:
                          message: "[DREAME BLUEPRINT] 🌙 Pulizia SERA normale"
                          level: info
                  - service: input_boolean.turn_on
                    target:
                      entity_id: "{{ flag_cleaned }}"

      # ===== BLOCCHI 1, 2, 3, 4 =====
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'block1' }}"
          - condition: template
            value_template: "{{ block1_on }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: system_log.write
                data:
                  message: "[DREAME BLUEPRINT] 🎯 Avvio BLOCCO 1"
                  level: info
          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_cleaned }}"

      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'block2' }}"
          - condition: template
            value_template: "{{ block2_on }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: system_log.write
                data:
                  message: "[DREAME BLUEPRINT] 🎯 Avvio BLOCCO 2"
                  level: info
          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_cleaned }}"

      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'block3' }}"
          - condition: template
            value_template: "{{ block3_on }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: system_log.write
                data:
                  message: "[DREAME BLUEPRINT] 🎯 Avvio BLOCCO 3"
                  level: info
          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_cleaned }}"

      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'block4' }}"
          - condition: template
            value_template: "{{ block4_on }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ debug_enabled }}"
            then:
              - service: system_log.write
                data:
                  message: "[DREAME BLUEPRINT] 🎯 Avvio BLOCCO 4"
                  level: info
          - service: input_boolean.turn_on
            target:
              entity_id: "{{ flag_cleaned }}"

mode: single
max_exceeded: silent
