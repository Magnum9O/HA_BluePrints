blueprint:
  name: Pulizia programmata Dreame (mattina/sera + blocchi A–D, con sensore presenza)
  description: >
    Pianifica la pulizia con il tuo robot Dreame per mattina/sera o con
    fino a 4 schedulazioni su base settimanale (blocchi A–D). Supporta la selezione
    delle stanze per ID o nome (tramite la mappa), e un controllo presenza opzionale per
    avviare la pulizia solo quando non si è in casa.

  domain: automation
  source_url: https://github.com/Magnum9O/HA_BluePrints/blob/main/Dreame/3_CleaningAutomations.yaml

  input:

    vacuum_entity:
      name: Robot Dreame
      description: Seleziona il tuo aspirapolvere Dreame.
      selector:
        entity:
          domain: vacuum

    map_camera:
      name: Mappa
      description: Seleziona la camera con attributo 'rooms' (es. camera.TuoRobot_map) generata con la Vacuum Map card. Obbligatoria.
      selector:
        entity:
          domain: camera

    cleaned_today_helper:
      name: Flag "Pulizia effettuata"
      description: Booleano che verrà acceso dopo la pulizia e resettato ogni giorno all'orario scelto.
      selector:
        entity:
          domain: input_boolean

    reset_time:
      name: Orario reset giornaliero
      description: Orario in cui spegnere il flag "Pulizia effettuata".
      default: "23:59:00"
      selector:
        time: {}

    presence_helper:
      name: Helper presenza (opzionale)
      description: Entità per il controllo presenza; se impostata, l’automazione parte solo quando il suo valore corrisponde a “Valore presenza richiesto”.
      default: ""
      selector:
        entity: {}

    presence_required_value:
      name: Valore presenza richiesto (opzionale)
      description: Esempi_ 1, home, on. Se vuoto la presenza è ignorata.
      default: ""

    # --- Mattina (sempre disponibile) ---
    morning_enabled:
      name: Attiva schedulazione mattina
      default: false
      selector:
        boolean: {}

    morning_time:
      name: Orario pulizia mattina
      default: "08:30:00"
      selector:
        time: {}

    morning_days:
      name: Giorni mattina
      description: Giorni della settimana (lascia vuoto per tutti i giorni).
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    morning_preset:
      name: Modalità mattina
      default: genius
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    morning_rooms:
      name: Stanze mattina
      description: Esempi_ "2,3,4" oppure "Kitchen,Bathroom". Se vuoto → tutta la casa.
      default: ""

    # --- Sera (sempre disponibile) ---
    evening_enabled:
      name: Attiva schedulazione sera
      default: false
      selector:
        boolean: {}

    evening_time:
      name: Orario pulizia sera
      default: "18:00:00"
      selector:
        time: {}

    evening_days:
      name: Giorni sera
      description: Giorni della settimana (lascia vuoto per tutti i giorni).
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    evening_preset:
      name: Modalità sera
      default: genius
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    evening_rooms:
      name: Stanze sera
      description: Esempi_ "2,3,4" oppure "Kitchen,Bathroom". Se vuoto → tutta la casa.
      default: ""

    # --- Blocchi avanzati A–D (sempre disponibili) ---
    blockA_enabled:
      name: Abilita blocco A
      default: false
      selector:
        boolean: {}

    blockA_time:
      name: Orario blocco A
      default: "09:00:00"
      selector:
        time: {}

    blockA_days:
      name: Giorni blocco A
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    blockA_preset:
      name: Modalità blocco A
      default: sweeping
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    blockA_rooms:
      name: Stanze blocco A
      description: Esempi_ "2,3,4" oppure "Kitchen,Bathroom". Se vuoto → tutta la casa.
      default: ""

    blockB_enabled:
      name: Abilita blocco B
      default: false
      selector:
        boolean: {}

    blockB_time:
      name: Orario blocco B
      default: "10:30:00"
      selector:
        time: {}

    blockB_days:
      name: Giorni blocco B
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    blockB_preset:
      name: Modalità blocco B
      default: mopping
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    blockB_rooms:
      name: Stanze blocco B
      description: Esempi_ "2,3,4" oppure "Kitchen,Bathroom". Se vuoto → tutta la casa.
      default: ""

    blockC_enabled:
      name: Abilita blocco C
      default: false
      selector:
        boolean: {}

    blockC_time:
      name: Orario blocco C
      default: "15:00:00"
      selector:
        time: {}

    blockC_days:
      name: Giorni blocco C
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    blockC_preset:
      name: Modalità blocco C
      default: genius
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    blockC_rooms:
      name: Stanze blocco C
      description: Esempi_ "2,3,4" oppure "Kitchen,Bathroom". Se vuoto → tutta la casa.
      default: ""

    blockD_enabled:
      name: Abilita blocco D
      default: false
      selector:
        boolean: {}

    blockD_time:
      name: Orario blocco D
      default: "18:30:00"
      selector:
        time: {}

    blockD_days:
      name: Giorni blocco D
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    blockD_preset:
      name: Modalità blocco D
      default: genius_deep
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    blockD_rooms:
      name: Stanze blocco D
      description: Esempi_ "2,3,4" oppure "Kitchen,Bathroom". Se vuoto → tutta la casa.
      default: ""

mode: restart
max_exceeded: silent

variables:
  vac: !input vacuum_entity
  map_ent: !input map_camera
  flag_cleaned: !input cleaned_today_helper
  presence_ent: !input presence_helper
  pres_val: !input presence_required_value

  # Mattina
  m_on: !input morning_enabled
  m_time: !input morning_time
  m_days: !input morning_days
  m_preset: !input morning_preset
  m_rooms: !input morning_rooms

  # Sera
  e_on: !input evening_enabled
  e_time: !input evening_time
  e_days: !input evening_days
  e_preset: !input evening_preset
  e_rooms: !input evening_rooms

  # Blocchi
  a_on: !input blockA_enabled
  a_time: !input blockA_time
  a_days: !input blockA_days
  a_preset: !input blockA_preset
  a_rooms: !input blockA_rooms

  b_on: !input blockB_enabled
  b_time: !input blockB_time
  b_days: !input blockB_days
  b_preset: !input blockB_preset
  b_rooms: !input blockB_rooms

  c_on: !input blockC_enabled
  c_time: !input blockC_time
  c_days: !input blockC_days
  c_preset: !input blockC_preset
  c_rooms: !input blockC_rooms

  d_on: !input blockD_enabled
  d_time: !input blockD_time
  d_days: !input blockD_days
  d_preset: !input blockD_preset
  d_rooms: !input blockD_rooms

trigger:
  - platform: time
    at: !input reset_time
    id: reset

  - platform: time
    at: "{{ m_time }}"
    id: morning

  - platform: time
    at: "{{ e_time }}"
    id: evening

  - platform: time
    at: "{{ a_time }}"
    id: blockA

  - platform: time
    at: "{{ b_time }}"
    id: blockB

  - platform: time
    at: "{{ c_time }}"
    id: blockC

  - platform: time
    at: "{{ d_time }}"
    id: blockD

condition: []

action:
  - choose:
      - conditions: "{{ trigger.id == 'reset' }}"
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: "{{ flag_cleaned }}"

      - conditions: >
          {{ trigger.id == 'morning'
             and m_on
             and (m_days | count == 0 or now().isoweekday() in
                  [1 if 'mon' in m_days else 0,
                   2 if 'tue' in m_days else 0,
                   3 if 'wed' in m_days else 0,
                   4 if 'thu' in m_days else 0,
                   5 if 'fri' in m_days else 0,
                   6 if 'sat' in m_days else 0,
                   7 if 'sun' in m_days else 0]) }}
        sequence:
          - choose:
              - conditions: >
                  {{ presence_ent != '' and pres_val != '' and states(presence_ent) != pres_val }}
                sequence: []
            default:
              - variables:
                  preset_now: "{{ m_preset }}"
                  rooms_now: "{{ m_rooms }}"
              - sequence: &run_clean
                - variables:
                    raw_rooms: "{{ rooms_now | string | trim }}"
                    # Se raw_rooms è vuoto → tutta la casa (lista vuota interpretata come all segments negli script)
                    seg_list: >
                      {% set txt = raw_rooms %}
                      {% if txt == '' %}
                        []
                      {% else %}
                        {% set parts = txt.split(',') | map('trim') | list %}
                        {% set rdict = state_attr(map_ent, 'rooms') or {} %}
                        {% set out = [] %}
                        {% for p in parts %}
                          {% if p|int|string == p %}
                            {% set out = out + [ p|int ] %}
                          {% else %}
                            {% set rid = (rdict|selectattr('1.name','equalto',p)|map(attribute='1.room_id')|list|first) %}
                            {% if rid is not none %}
                              {% set out = out + [ rid|int ] %}
                            {% endif %}
                          {% endif %}
                        {% endfor %}
                        {{ out }}
                      {% endif %}
                - choose:
                    - conditions: "{{ preset_now in ['sweeping','mopping','sweeping_and_mopping','mopping_after_sweeping'] }}"
                      sequence:
                        - service: select.select_option
                          target:
                            entity_id: select.{{ states(vac).split('.')[0] if false else 'ambrogio_cleangenius_2' }}
                          data:
                            option: "off"
                        - wait_template: "{{ states('select.ambrogio_cleangenius_2') in ['off','unknown','unavailable','none'] }}"
                          timeout: "00:00:08"
                          continue_on_timeout: true
                        - service: select.select_option
                          target:
                            entity_id: select.ambrogio_cleaning_mode_2
                          data:
                            option: "{{ preset_now }}"
                        - wait_template: "{{ states('select.ambrogio_cleaning_mode_2') == preset_now }}"
                          timeout: "00:00:08"
                          continue_on_timeout: true
                        - service: dreame_vacuum.vacuum_clean_segment
                          target:
                            entity_id: "{{ vac }}"
                          data:
                            segments: "{{ seg_list }}"
                    - conditions: "{{ preset_now == 'genius' }}"
                      sequence:
                        - service: select.select_option
                          target:
                            entity_id: select.ambrogio_cleangenius_2
                          data:
                            option: "routine_cleaning"
                        - wait_template: "{{ states('select.ambrogio_cleangenius_2') in ['routine_cleaning','unknown','unavailable','none'] }}"
                          timeout: "00:00:08"
                          continue_on_timeout: true
                        - service: dreame_vacuum.vacuum_clean_segment
                          target:
                            entity_id: "{{ vac }}"
                          data:
                            segments: "{{ seg_list }}"
                    - conditions: "{{ preset_now == 'genius_deep' }}"
                      sequence:
                        - service: select.select_option
                          target:
                            entity_id: select.ambrogio_cleangenius_2
                          data:
                            option: "deep_cleaning"
                        - wait_template: "{{ states('select.ambrogio_cleangenius_2') in ['deep_cleaning','unknown','unavailable','none'] }}"
                          timeout: "00:00:08"
                          continue_on_timeout: true
                        - service: dreame_vacuum.vacuum_clean_segment
                          target:
                            entity_id: "{{ vac }}"
                          data:
                            segments: "{{ seg_list }}"
                - service: input_boolean.turn_on
                  target:
                    entity_id: "{{ flag_cleaned }}"

      - conditions: >
          {{ trigger.id == 'evening'
             and e_on
             and (e_days | count == 0 or now().isoweekday() in
                  [1 if 'mon' in e_days else 0,
                   2 if 'tue' in e_days else 0,
                   3 if 'wed' in e_days else 0,
                   4 if 'thu' in e_days else 0,
                   5 if 'fri' in e_days else 0,
                   6 if 'sat' in e_days else 0,
                   7 if 'sun' in e_days else 0]) }}
        sequence:
          - choose:
              - conditions: >
                  {{ presence_ent != '' and pres_val != '' and states(presence_ent) != pres_val }}
                sequence: []
            default:
              - variables: { preset_now: "{{ e_preset }}", rooms_now: "{{ e_rooms }}" }
              - sequence: *run_clean

      - conditions: "{{ trigger.id == 'blockA' and a_on and (a_days | count == 0 or now().isoweekday() in [1 if 'mon' in a_days else 0,2 if 'tue' in a_days else 0,3 if 'wed' in a_days else 0,4 if 'thu' in a_days else 0,5 if 'fri' in a_days else 0,6 if 'sat' in a_days else 0,7 if 'sun' in a_days else 0]) }}"
        sequence:
          - variables: { preset_now: "{{ a_preset }}", rooms_now: "{{ a_rooms }}" }
          - sequence: *run_clean

      - conditions: "{{ trigger.id == 'blockB' and b_on and (b_days | count == 0 or now().isoweekday() in [1 if 'mon' in b_days else 0,2 if 'tue' in b_days else 0,3 if 'wed' in b_days else 0,4 if 'thu' in b_days else 0,5 if 'fri' in b_days else 0,6 if 'sat' in b_days else 0,7 if 'sun' in b_days else 0]) }}"
        sequence:
          - variables: { preset_now: "{{ b_preset }}", rooms_now: "{{ b_rooms }}" }
          - sequence: *run_clean

      - conditions: "{{ trigger.id == 'blockC' and c_on and (c_days | count == 0 or now().isoweekday() in [1 if 'mon' in c_days else 0,2 if 'tue' in c_days else 0,3 if 'wed' in c_days else 0,4 if 'thu' in c_days else 0,5 if 'fri' in c_days else 0,6 if 'sat' in c_days else 0,7 if 'sun' in c_days else 0]) }}"
        sequence:
          - variables: { preset_now: "{{ c_preset }}", rooms_now: "{{ c_rooms }}" }
          - sequence: *run_clean

      - conditions: "{{ trigger.id == 'blockD' and d_on and (d_days | count == 0 or now().isoweekday() in [1 if 'mon' in d_days else 0,2 if 'tue' in d_days else 0,3 if 'wed' in d_days else 0,4 if 'thu' in d_days else 0,5 if 'fri' in d_days else 0,6 if 'sat' in d_days else 0,7 if 'sun' in d_days else 0]) }}"
        sequence:
          - variables: { preset_now: "{{ d_preset }}", rooms_now: "{{ d_rooms }}" }
          - sequence: *run_clean
