blueprint:
  name: 🤖 Dreame Vacuum - Automazione Pulizie Avanzata (Full + Export JSON)
  description: |
    🚀 SISTEMA INTELLIGENTE DI PULIZIE AUTOMATICHE per Dreame (integrazione `dreame_vacuum`)
    - Slot Principale (mattina/sera) con logica adattiva (always / skip_if_cleaned / adapt_if_cleaned)
    - 4 Schedulazioni aggiuntive (schedule1..4), ognuna con mattina/sera e logica adattiva
    - Controllo presenza opzionale
    - Flag "pulito oggi" con reset giornaliero
    - ✨ Export automatico della configurazione in JSON verso un `input_text` per usarla in Template/Dashboard
  domain: automation

  input:
    # === Base ===
    vacuum_entity:
      name: 🤖 Robot Aspirapolvere
      selector: {entity: {domain: vacuum}}

    robot_status_sensor:
      name: 📊 Sensore stato robot (opzionale)
      default: ""
      selector: {entity: {domain: sensor}}

    presence_entity:
      name: 👥 Entità presenza (opzionale)
      description: Esegui solo se questa entità indica "casa vuota" (valore sotto)
      default: ""
      selector: {entity: {}}

    presence_value:
      name: 🏠 Valore "casa vuota" (opzionale)
      default: "0"
      selector: {text: {}}

    flag_cleaned_today:
      name: 🏁 Flag "Pulito oggi" (input_boolean)
      selector: {entity: {domain: input_boolean}}

    cleangenius_select:
      name: 🎛️ Select CleanGenius (opzionale)
      description: Entità select.* per settare routine/deep quando preset = genius/genius_deep
      default: ""
      selector: {entity: {domain: select}}

    # === Slot principale ===
    main_weekdays:
      name: 📅 Principale - Giorni attivi
      default: []
      selector:
        select:
          multiple: true
          mode: list
          options: [lunedì, martedì, mercoledì, giovedì, venerdì, sabato, domenica]

    main_morning_on:
      name: 🌅 Principale - Mattina attiva
      default: false
      selector: {boolean: {}}

    main_morning_time:
      name: ⏰ Principale - Orario mattina
      default: "09:00:00"
      selector: {time: {}}

    main_morning_preset:
      name: 🎯 Principale - Preset mattina
      default: aspira_lava
      selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}

    main_morning_rooms:
      name: 🏠 Principale - Stanze mattina (ID, separati da virgole)
      default: ""
      selector: {text: {}}

    main_evening_on:
      name: 🌙 Principale - Sera attiva
      default: false
      selector: {boolean: {}}

    main_evening_time:
      name: ⏰ Principale - Orario sera
      default: "18:00:00"
      selector: {time: {}}

    main_evening_conditional:
      name: 🧠 Principale - Logica sera
      default: adapt_if_cleaned
      selector: {select: {options: [always, skip_if_cleaned, adapt_if_cleaned]}}

    main_evening_preset:
      name: 🎯 Principale - Preset sera
      default: lava
      selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}

    main_evening_rooms:
      name: 🏠 Principale - Stanze sera
      default: ""
      selector: {text: {}}

    main_evening_fallback_preset:
      name: 🔄 Principale - Preset fallback sera (se già pulito)
      default: aspira
      selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}

    main_evening_fallback_rooms:
      name: 🔄 Principale - Stanze fallback sera
      default: ""
      selector: {text: {}}

    # === Schedulazioni 1..4 (stessa struttura) ===
    schedule1_morning_on:   {name: "☀️ Schedule1 - Mattina attiva", default: false, selector: {boolean: {}}}
    schedule1_weekdays:     {name: "📅 Schedule1 - Giorni attivi", selector: {select: {multiple: true, mode: list, options: [lunedì, martedì, mercoledì, giovedì, venerdì, sabato, domenica]}}, default: []}
    schedule1_morning_time: {name: "☀️ Schedule1 - Orario mattina", default: "08:00:00", selector: {time: {}}}
    schedule1_morning_preset: {name: "☀️ Schedule1 - Preset mattina", default: lava, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule1_morning_rooms:  {name: "📍 Schedule1 - Stanze mattina", default: "3", selector: {text: {}}}
    schedule1_evening_on:   {name: "🌙 Schedule1 - Sera attiva", default: false, selector: {boolean: {}}}
    schedule1_evening_time: {name: "🌙 Schedule1 - Orario sera", default: "19:00:00", selector: {time: {}}}
    schedule1_evening_conditional: {name: "🧠 Schedule1 - Logica sera", default: always, selector: {select: {options: [always, skip_if_cleaned, adapt_if_cleaned]}}}
    schedule1_evening_preset: {name: "🌙 Schedule1 - Preset sera", default: lava, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule1_evening_rooms:  {name: "📍 Schedule1 - Stanze sera", default: "3", selector: {text: {}}}
    schedule1_evening_fallback_preset: {name: "🔄 Schedule1 - Preset fallback sera", default: aspira, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule1_evening_fallback_rooms:  {name: "🔄 Schedule1 - Stanze fallback sera", default: "", selector: {text: {}}}

    schedule2_morning_on:   {name: "☀️ Schedule2 - Mattina attiva", default: false, selector: {boolean: {}}}
    schedule2_weekdays:     {name: "📅 Schedule2 - Giorni attivi", selector: {select: {multiple: true, mode: list, options: [lunedì, martedì, mercoledì, giovedì, venerdì, sabato, domenica]}}, default: []}
    schedule2_morning_time: {name: "☀️ Schedule2 - Orario mattina", default: "08:30:00", selector: {time: {}}}
    schedule2_morning_preset: {name: "☀️ Schedule2 - Preset mattina", default: aspira, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule2_morning_rooms:  {name: "📍 Schedule2 - Stanze mattina", default: "", selector: {text: {}}}
    schedule2_evening_on:   {name: "🌙 Schedule2 - Sera attiva", default: false, selector: {boolean: {}}}
    schedule2_evening_time: {name: "🌙 Schedule2 - Orario sera", default: "19:30:00", selector: {time: {}}}
    schedule2_evening_conditional: {name: "🧠 Schedule2 - Logica sera", default: always, selector: {select: {options: [always, skip_if_cleaned, adapt_if_cleaned]}}}
    schedule2_evening_preset: {name: "🌙 Schedule2 - Preset sera", default: aspira_lava, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule2_evening_rooms:  {name: "📍 Schedule2 - Stanze sera", default: "", selector: {text: {}}}
    schedule2_evening_fallback_preset: {name: "🔄 Schedule2 - Preset fallback sera", default: lava, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule2_evening_fallback_rooms:  {name: "🔄 Schedule2 - Stanze fallback sera", default: "", selector: {text: {}}}

    schedule3_morning_on:   {name: "☀️ Schedule3 - Mattina attiva", default: false, selector: {boolean: {}}}
    schedule3_weekdays:     {name: "📅 Schedule3 - Giorni attivi", selector: {select: {multiple: true, mode: list, options: [lunedì, martedì, mercoledì, giovedì, venerdì, sabato, domenica]}}, default: []}
    schedule3_morning_time: {name: "☀️ Schedule3 - Orario mattina", default: "07:30:00", selector: {time: {}}}
    schedule3_morning_preset: {name: "☀️ Schedule3 - Preset mattina", default: aspira, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule3_morning_rooms:  {name: "📍 Schedule3 - Stanze mattina", default: "", selector: {text: {}}}
    schedule3_evening_on:   {name: "🌙 Schedule3 - Sera attiva", default: false, selector: {boolean: {}}}
    schedule3_evening_time: {name: "🌙 Schedule3 - Orario sera", default: "20:00:00", selector: {time: {}}}
    schedule3_evening_conditional: {name: "🧠 Schedule3 - Logica sera", default: always, selector: {select: {options: [always, skip_if_cleaned, adapt_if_cleaned]}}}
    schedule3_evening_preset: {name: "🌙 Schedule3 - Preset sera", default: aspira_lava, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule3_evening_rooms:  {name: "📍 Schedule3 - Stanze sera", default: "", selector: {text: {}}}
    schedule3_evening_fallback_preset: {name: "🔄 Schedule3 - Preset fallback sera", default: lava, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule3_evening_fallback_rooms:  {name: "🔄 Schedule3 - Stanze fallback sera", default: "", selector: {text: {}}}

    schedule4_morning_on:   {name: "☀️ Schedule4 - Mattina attiva", default: false, selector: {boolean: {}}}
    schedule4_weekdays:     {name: "📅 Schedule4 - Giorni attivi", selector: {select: {multiple: true, mode: list, options: [lunedì, martedì, mercoledì, giovedì, venerdì, sabato, domenica]}}, default: []}
    schedule4_morning_time: {name: "☀️ Schedule4 - Orario mattina", default: "07:00:00", selector: {time: {}}}
    schedule4_morning_preset: {name: "☀️ Schedule4 - Preset mattina", default: aspira, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule4_morning_rooms:  {name: "📍 Schedule4 - Stanze mattina", default: "", selector: {text: {}}}
    schedule4_evening_on:   {name: "🌙 Schedule4 - Sera attiva", default: false, selector: {boolean: {}}}
    schedule4_evening_time: {name: "🌙 Schedule4 - Orario sera", default: "20:30:00", selector: {time: {}}}
    schedule4_evening_conditional: {name: "🧠 Schedule4 - Logica sera", default: always, selector: {select: {options: [always, skip_if_cleaned, adapt_if_cleaned]}}}
    schedule4_evening_preset: {name: "🌙 Schedule4 - Preset sera", default: aspira_lava, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule4_evening_rooms:  {name: "📍 Schedule4 - Stanze sera", default: "", selector: {text: {}}}
    schedule4_evening_fallback_preset: {name: "🔄 Schedule4 - Preset fallback sera", default: lava, selector: {select: {options: [aspira, lava, aspira_lava, genius, genius_deep]}}}
    schedule4_evening_fallback_rooms:  {name: "🔄 Schedule4 - Stanze fallback sera", default: "", selector: {text: {}}}

    # === Export JSON ===
    export_entity:
      name: 🧱 Entity di export (JSON)
      description: Helper input_text dove salvare la configurazione corrente
      selector: {entity: {domain: input_text}}

# === Trigger ===
trigger:
  # Export all'avvio e su reload automazioni
  - id: export_on_start
    platform: homeassistant
    event: start
  - id: export_on_reload
    platform: event
    event_type: automation_reloaded

  # Reset flag giornaliero
  - id: daily_reset
    platform: time
    at: "00:01:00"

  # Slot principale
  - id: main_morning
    platform: time
    at: !input main_morning_time
  - id: main_evening
    platform: time
    at: !input main_evening_time

  # Schedulazioni 1..4 (mattina/sera)
  - {id: schedule1_morning, platform: time, at: !input schedule1_morning_time}
  - {id: schedule1_evening, platform: time, at: !input schedule1_evening_time}
  - {id: schedule2_morning, platform: time, at: !input schedule2_morning_time}
  - {id: schedule2_evening, platform: time, at: !input schedule2_evening_time}
  - {id: schedule3_morning, platform: time, at: !input schedule3_morning_time}
  - {id: schedule3_evening, platform: time, at: !input schedule3_evening_time}
  - {id: schedule4_morning, platform: time, at: !input schedule4_morning_time}
  - {id: schedule4_evening, platform: time, at: !input schedule4_evening_time}

condition: []

# === Azioni ===
action:
  - choose:
      # --- Export JSON ---
      - conditions: "{{ trigger.id in ['export_on_start','export_on_reload'] }}"
        sequence:
          - service: input_text.set_value
            target: {entity_id: !input export_entity}
            data:
              value: >
                {{
                  dict(
                    vacuum_entity = !input vacuum_entity,
                    robot_status_sensor = !input robot_status_sensor,
                    presence_entity = !input presence_entity,
                    presence_value = !input presence_value,
                    flag_cleaned_today = !input flag_cleaned_today,
                    cleangenius_select = !input cleangenius_select,

                    main_weekdays = !input main_weekdays,
                    main_morning_on = !input main_morning_on,
                    main_morning_time = !input main_morning_time,
                    main_morning_preset = !input main_morning_preset,
                    main_morning_rooms = !input main_morning_rooms,
                    main_evening_on = !input main_evening_on,
                    main_evening_time = !input main_evening_time,
                    main_evening_conditional = !input main_evening_conditional,
                    main_evening_preset = !input main_evening_preset,
                    main_evening_rooms = !input main_evening_rooms,
                    main_evening_fallback_preset = !input main_evening_fallback_preset,
                    main_evening_fallback_rooms = !input main_evening_fallback_rooms,

                    schedule1_morning_on = !input schedule1_morning_on,
                    schedule1_weekdays = !input schedule1_weekdays,
                    schedule1_morning_time = !input schedule1_morning_time,
                    schedule1_morning_preset = !input schedule1_morning_preset,
                    schedule1_morning_rooms = !input schedule1_morning_rooms,
                    schedule1_evening_on = !input schedule1_evening_on,
                    schedule1_evening_time = !input schedule1_evening_time,
                    schedule1_evening_conditional = !input schedule1_evening_conditional,
                    schedule1_evening_preset = !input schedule1_evening_preset,
                    schedule1_evening_rooms = !input schedule1_evening_rooms,
                    schedule1_evening_fallback_preset = !input schedule1_evening_fallback_preset,
                    schedule1_evening_fallback_rooms = !input schedule1_evening_fallback_rooms,

                    schedule2_morning_on = !input schedule2_morning_on,
                    schedule2_weekdays = !input schedule2_weekdays,
                    schedule2_morning_time = !input schedule2_morning_time,
                    schedule2_morning_preset = !input schedule2_morning_preset,
                    schedule2_morning_rooms = !input schedule2_morning_rooms,
                    schedule2_evening_on = !input schedule2_evening_on,
                    schedule2_evening_time = !input schedule2_evening_time,
                    schedule2_evening_conditional = !input schedule2_evening_conditional,
                    schedule2_evening_preset = !input schedule2_evening_preset,
                    schedule2_evening_rooms = !input schedule2_evening_rooms,
                    schedule2_evening_fallback_preset = !input schedule2_evening_fallback_preset,
                    schedule2_evening_fallback_rooms = !input schedule2_evening_fallback_rooms,

                    schedule3_morning_on = !input schedule3_morning_on,
                    schedule3_weekdays = !input schedule3_weekdays,
                    schedule3_morning_time = !input schedule3_morning_time,
                    schedule3_morning_preset = !input schedule3_morning_preset,
                    schedule3_morning_rooms = !input schedule3_morning_rooms,
                    schedule3_evening_on = !input schedule3_evening_on,
                    schedule3_evening_time = !input schedule3_evening_time,
                    schedule3_evening_conditional = !input schedule3_evening_conditional,
                    schedule3_evening_preset = !input schedule3_evening_preset,
                    schedule3_evening_rooms = !input schedule3_evening_rooms,
                    schedule3_evening_fallback_preset = !input schedule3_evening_fallback_preset,
                    schedule3_evening_fallback_rooms = !input schedule3_evening_fallback_rooms,

                    schedule4_morning_on = !input schedule4_morning_on,
                    schedule4_weekdays = !input schedule4_weekdays,
                    schedule4_morning_time = !input schedule4_morning_time,
                    schedule4_morning_preset = !input schedule4_morning_preset,
                    schedule4_morning_rooms = !input schedule4_morning_rooms,
                    schedule4_evening_on = !input schedule4_evening_on,
                    schedule4_evening_time = !input schedule4_evening_time,
                    schedule4_evening_conditional = !input schedule4_evening_conditional,
                    schedule4_evening_preset = !input schedule4_evening_preset,
                    schedule4_evening_rooms = !input schedule4_evening_rooms,
                    schedule4_evening_fallback_preset = !input schedule4_evening_fallback_preset,
                    schedule4_evening_fallback_rooms = !input schedule4_evening_fallback_rooms
                  ) | tojson
                }}

      # --- Reset flag ---
      - conditions: "{{ trigger.id == 'daily_reset' }}"
        sequence:
          - service: input_boolean.turn_off
            target: {entity_id: !input flag_cleaned_today}

    default:
      # Tutta la logica di pulizia (principale + schedules) con guardie comuni
      - variables:
          dow_map: {1: 'lunedì', 2: 'martedì', 3: 'mercoledì', 4: 'giovedì', 5: 'venerdì', 6: 'sabato', 7: 'domenica'}
          oggi: "{{ dow_map[now().isoweekday()] }}"
          presence_ok: >
            {%- set e = (!input presence_entity) -%}
            {%- set v = (!input presence_value) -%}
            {%- if e == '' -%} true
            {%- else -%} {{ states(e) == v }}
            {%- endif -%}

      - condition: template
        value_template: "{{ presence_ok }}"

      - choose:
          # ===== Principale mattina =====
          - conditions: >
              {{ trigger.id == 'main_morning'
                 and ( !input main_morning_on )
                 and ( oggi in (!input main_weekdays) ) }}
            sequence:
              - variables:
                  preset: "{{ !input main_morning_preset }}"
                  rooms:  "{{ !input main_morning_rooms }}"
              - choose:
                  - conditions: "{{ (!input cleangenius_select) != '' and preset in ['genius','genius_deep'] }}"
                    sequence:
                      - service: select.select_option
                        target: {entity_id: !input cleangenius_select}
                        data: {option: "{{ 'deep_cleaning' if preset == 'genius_deep' else 'routine_cleaning' }}"}
              - choose:
                  - conditions: "{{ (rooms | trim) != '' }}"
                    sequence:
                      - service: dreame_vacuum.vacuum_clean_segment
                        target: {entity_id: !input vacuum_entity}
                        data:
                          segments: >
                            {%- set s = rooms | replace(' ', '') -%}
                            {%- if s == '' -%}[]
                            {%- else -%}[{{ s }}]{%- endif -%}
                  - conditions: "{{ (rooms | trim) == '' }}"
                    sequence:
                      - service: vacuum.start
                        target: {entity_id: !input vacuum_entity}
              - service: input_boolean.turn_on
                target: {entity_id: !input flag_cleaned_today}

          # ===== Principale sera (adattiva) =====
          - conditions: >
              {{ trigger.id == 'main_evening'
                 and ( !input main_evening_on )
                 and ( oggi in (!input main_weekdays) ) }}
            sequence:
              - variables:
                  already: "{{ is_state(!input flag_cleaned_today, 'on') }}"
                  mode: "{{ !input main_evening_conditional }}"
                  preset: >
                    {% if mode == 'adapt_if_cleaned' and already %}{{ !input main_evening_fallback_preset }}
                    {% else %}{{ !input main_evening_preset }}{% endif %}
                  rooms: >
                    {% if mode == 'adapt_if_cleaned' and already %}{{ !input main_evening_fallback_rooms }}
                    {% else %}{{ !input main_evening_rooms }}{% endif %}
              - condition: template
                value_template: "{{ not (mode == 'skip_if_cleaned' and already) }}"
              - choose:
                  - conditions: "{{ (!input cleangenius_select) != '' and preset in ['genius','genius_deep'] }}"
                    sequence:
                      - service: select.select_option
                        target: {entity_id: !input cleangenius_select}
                        data: {option: "{{ 'deep_cleaning' if preset == 'genius_deep' else 'routine_cleaning' }}"}
              - choose:
                  - conditions: "{{ (rooms | trim) != '' }}"
                    sequence:
                      - service: dreame_vacuum.vacuum_clean_segment
                        target: {entity_id: !input vacuum_entity}
                        data:
                          segments: >
                            {%- set s = rooms | replace(' ', '') -%}
                            {%- if s == '' -%}[]
                            {%- else -%}[{{ s }}]{%- endif -%}
                  - conditions: "{{ (rooms | trim) == '' }}"
                    sequence:
                      - service: vacuum.start
                        target: {entity_id: !input vacuum_entity}
              - service: input_boolean.turn_on
                target: {entity_id: !input flag_cleaned_today}

          # ===== Schedules 1..4 =====
          {% for X in [1,2,3,4] %}
          - conditions: >
              {% set days = !input ("schedule" ~ X ~ "_weekdays") %}
              {{
                (trigger.id == ("schedule" ~ X ~ "_morning") and (oggi in days) and (!input ("schedule" ~ X ~ "_morning_on")))
                or
                (trigger.id == ("schedule" ~ X ~ "_evening") and (oggi in days) and (!input ("schedule" ~ X ~ "_evening_on")))
              }}
            sequence:
              - variables:
                  is_morning: "{{ trigger.id == ('schedule' ~ X ~ '_morning') }}"
                  mode: "{{ ( !input('schedule' ~ X ~ '_evening_conditional') ) if not is_morning else 'always' }}"
                  already: "{{ is_state(!input flag_cleaned_today, 'on') }}"
                  preset: >
                    {% if is_morning %}{{ !input('schedule' ~ X ~ '_morning_preset') }}
                    {% else %}
                      {% if mode == 'adapt_if_cleaned' and already %}{{ !input('schedule' ~ X ~ '_evening_fallback_preset') }}
                      {% else %}{{ !input('schedule' ~ X ~ '_evening_preset') }}{% endif %}
                    {% endif %}
                  rooms: >
                    {% if is_morning %}{{ !input('schedule' ~ X ~ '_morning_rooms') }}
                    {% else %}
                      {% if mode == 'adapt_if_cleaned' and already %}{{ !input('schedule' ~ X ~ '_evening_fallback_rooms') }}
                      {% else %}{{ !input('schedule' ~ X ~ '_evening_rooms') }}{% endif %}
                    {% endif %}
              - condition: template
                value_template: "{{ not (not is_morning and mode == 'skip_if_cleaned' and already) }}"
              - choose:
                  - conditions: "{{ (!input cleangenius_select) != '' and preset in ['genius','genius_deep'] }}"
                    sequence:
                      - service: select.select_option
                        target: {entity_id: !input cleangenius_select}
                        data: {option: "{{ 'deep_cleaning' if preset == 'genius_deep' else 'routine_cleaning' }}"}
              - choose:
                  - conditions: "{{ (rooms | trim) != '' }}"
                    sequence:
                      - service: dreame_vacuum.vacuum_clean_segment
                        target: {entity_id: !input vacuum_entity}
                        data:
                          segments: >
                            {%- set s = rooms | replace(' ', '') -%}
                            {%- if s == '' -%}[]
                            {%- else -%}[{{ s }}]{%- endif -%}
                  - conditions: "{{ (rooms | trim) == '' }}"
                    sequence:
                      - service: vacuum.start
                        target: {entity_id: !input vacuum_entity}
              - service: input_boolean.turn_on
                target: {entity_id: !input flag_cleaned_today}
          {% endfor %}

mode: queued
max: 10
